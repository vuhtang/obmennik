version: "3.9"

services:
  database:
    image: postgres:latest
    container_name: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=exchange
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "admin", "-d", "exchange" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend


  liquibase-migrations:
    image: liquibase/liquibase:4.18
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://database:5432/exchange
      - --username=admin
      - --password=admin
      - update
    volumes:
      - ./migrations:/liquibase/changelog

  eureka:
    build: ./eureka-server
    ports:
      - "8081:8081"
    networks:
      - backend
    depends_on:
      - database
      - liquibase-migrations
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka:8081/actuator/health"]
      interval: 10s
      start_period: 10s
      timeout: 5s
      retries: 4

  configs:
    build: ./config-server
    ports:
      - "8888:8888"
    networks:
      - backend
    depends_on:
      eureka:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      EUREKA_URL: http://eureka:8081/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://configs:8888/actuator/health" ]
      interval: 10s
      start_period: 10s
      timeout: 5s
      retries: 4

  auth:
    build: ./auth
    ports:
      - "8088:8088"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_URL: jdbc:postgresql://database:5432/exchange
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/

  banking:
    build: ./banking
    ports:
      - "8084:8084"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_URL: r2dbc:postgresql://database:5432/exchange
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/

  human-resource:
    build: ./human-resource
    ports:
      - "8083:8083"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_URL: jdbc:postgresql://database:5432/exchange
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/
      STOCK_URL: http://stock:8089/

  stock:
    build: ./stock
    ports:
      - "8089:8089"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:29092,PLAINTEXT://broker-2:39092,PLAINTEXT://broker-3:49092
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_URL: jdbc:postgresql://database:5432/exchange
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/
      STOCK_URL: http://stock:8089/
      BANKING_URL: http://banking:8084/

  gateway:
    build: ./api-gateway
    ports:
      - "8082:8082"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      database:
        condition: service_started
      liquibase-migrations:
        condition: service_started
    environment:
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/
      STOCK_URL: http://stock:8089/
      BANKING_URL: http://banking:8084/
      AUTH_URL: http://auth:8088/
      ACCOUNTS_URL: http://human-resource:8083/
      FILE_SERVER_URL: http://file-server:8077/

  storage:
    image: minio/minio:latest
    container_name: storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    volumes:
      - highload-storage-data:/data
    networks:
      - backend
    restart: always
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://storage:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  file-server:
    build: ./file-server
    ports:
      - "8077:8077"
    networks:
      - backend
    depends_on:
      configs:
        condition: service_healthy
      storage:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:29092,PLAINTEXT://broker-2:39092,PLAINTEXT://broker-3:49092
      EUREKA_URL: http://eureka:8081/eureka
      CONFIG_URL: http://configs:8888/
      STOCK_URL: http://stock:8089/
      STORAGE_URL: http://storage:9000/
      STORAGE_USER: ROOTUSER
      STORAGE_PASSWORD: CHANGEME123

  controller-1:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-3:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-1:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-2:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-2:39092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:39092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-3:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-3:49092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:49092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9002:9000"  # Порт для доступа к Kafdrop
    environment:
      KAFKA_BROKERCONNECT: broker-1:29092,broker-2:39092,broker-3:49092  # Подключение к брокерам Kafka
#      JVM_OPTS: "-Xms32M -Xmx64M"  # Настройки JVM
#      SERVER_SERVLET_CONTEXTPATH: "/"  # Контекстный путь (по желанию)
    networks:
      - backend
    depends_on:
      - broker-1
      - broker-2
      - broker-3
volumes:
  postgres-data:
  highload-storage-data:

networks:
  backend: