plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.highload'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation("org.springframework.kafka:spring-kafka:3.3.0")
	implementation files('libs/database-common-0.0.1-SNAPSHOT-plain.jar')
	implementation("org.springframework.cloud:spring-cloud-starter-config:4.1.3")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.5'
	implementation 'org.postgresql:postgresql:42.7.2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'io.projectreactor:reactor-test:3.7.2'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
